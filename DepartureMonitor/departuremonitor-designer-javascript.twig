<script type="text/javascript">
    function departuremonitor_form_edit_open() {
        var form = $(this).find('form');
        setupCheckboxFields(form, '#useDuration', '.duration-fields');
        setupCheckboxFields(form, '#hideHeader', '', '.header-fields');
        setupCheckboxFields(form, '#hideIcons', '', '.icon-fields');
        setupCheckboxFields(form, '#disableAnimation', '', '.animation-fields');

        var options = {format: 'rgba'};
        $(this).find("#theadBackgroundColor").colorpicker(options);
        $(this).find("#theadFontColor").colorpicker(options);
        $(this).find("#tbodyFontColor").colorpicker(options);
        $(this).find("#tbodyOddBackgroundColor").colorpicker(options);
        $(this).find("#tbodyEvenBackgroundColor").colorpicker(options);

        var bodyFont = $(this).find("#tbodyFont");
        var headFont = $(this).find("#theadFont");
        $.ajax({
            method: "GET",
            url: bodyFont.data('searchUrl'),
            success: function (res) {
                if (res.success) {
                    $.each(res.data, function (index, element) {
                        if (headFont.data('value') === element.familyName) {
                            headFont.append($('<option value="' + element.familyName + '" selected>' + element.displayName + '</option>'));
                            return;
                        }

                        if (bodyFont.data('value') === element.familyName) {
                            bodyFont.append($('<option value="' + element.familyName + '" selected>' + element.displayName + '</option>'));
                            return;
                        }

                        headFont.append($('<option value="' + element.familyName + '">' + element.displayName + '</option>'));
                        bodyFont.append($('<option value="' + element.familyName + '">' + element.displayName + '</option>'));
                    });
                }
            }
        });
    }

    function setupCheckboxFields(form, checkBoxSelector, inputFieldsSelector, inputFieldsSelectorOpposite) {
        const checkboxObj = $(form).find(checkBoxSelector);
        const inputFieldsObj = $(form).find(inputFieldsSelector);
        const inputFieldsObjOpposite = $(form).find(inputFieldsSelectorOpposite);

        function displayInputFields() {
            // Init
            if(checkboxObj.is(':checked') === false) {
                inputFieldsObj.css('display', 'none');
                inputFieldsObjOpposite.css('display', 'block');
            } else if(checkboxObj.is(':checked') === true) {
                inputFieldsObj.css('display', 'block');
                inputFieldsObjOpposite.css('display', 'none');
            }
        }

        // Init
        displayInputFields();

        // Change
        checkboxObj.on('change', displayInputFields);
    }
</script>
